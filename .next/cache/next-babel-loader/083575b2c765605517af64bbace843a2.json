{"ast":null,"code":"import _slicedToArray from \"C:/Users/folkm/OneDrive/\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B/Projects-Web/WhyKrabi/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nexport var useScroll = function useScroll() {\n  _s();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      offset = _React$useState2[0],\n      setOffset = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isScroll = _React$useState4[0],\n      setIsScroll = _React$useState4[1];\n\n  React.useEffect(function () {\n    var handleScroll = function handleScroll() {\n      setOffset(window.pageYOffset);\n\n      if (offset > 20) {\n        setIsScroll(true);\n      } else {\n        setIsScroll(false);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return function () {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  return {\n    offset: offset,\n    isScroll: isScroll\n  };\n};\n\n_s(useScroll, \"414wfMEc2TtORUDPUTCVAvp+YC4=\");","map":{"version":3,"sources":["C:/Users/folkm/OneDrive/เดสก์ท็อป/Projects-Web/WhyKrabi/frontend/src/hooks/useScroll.js"],"names":["React","useScroll","useState","offset","setOffset","isScroll","setIsScroll","useEffect","handleScroll","window","pageYOffset","addEventListener","removeEventListener"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AAAA,wBACCD,KAAK,CAACE,QAAN,CAAe,CAAf,CADD;AAAA;AAAA,MACpBC,MADoB;AAAA,MACZC,SADY;;AAAA,yBAEKJ,KAAK,CAACE,QAAN,CAAe,KAAf,CAFL;AAAA;AAAA,MAEpBG,QAFoB;AAAA,MAEVC,WAFU;;AAI3BN,EAAAA,KAAK,CAACO,SAAN,CAAgB,YAAM;AAClB,QAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvBJ,MAAAA,SAAS,CAACK,MAAM,CAACC,WAAR,CAAT;;AACA,UAAIP,MAAM,GAAG,EAAb,EAAiB;AACbG,QAAAA,WAAW,CAAC,IAAD,CAAX;AACH,OAFD,MAEO;AACHA,QAAAA,WAAW,CAAC,KAAD,CAAX;AACH;AACJ,KAPD;;AAUAG,IAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCH,YAAlC;AAEA,WAAO,YAAM;AACTC,MAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCJ,YAArC;AACH,KAFD;AAIH,GAjBD,EAiBG,EAjBH;AAqBA,SAAO;AACHL,IAAAA,MAAM,EAANA,MADG;AAEHE,IAAAA,QAAQ,EAARA;AAFG,GAAP;AAIH,CA7BM;;GAAMJ,S","sourcesContent":["import React from \"react\";\r\n\r\nexport const useScroll = () => {\r\n    const [offset, setOffset] = React.useState(0)\r\n    const [isScroll, setIsScroll] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        const handleScroll = () => {\r\n            setOffset(window.pageYOffset)\r\n            if (offset > 20) {\r\n                setIsScroll(true)\r\n            } else {\r\n                setIsScroll(false)\r\n            }\r\n        }\r\n\r\n\r\n        window.addEventListener('scroll', handleScroll)\r\n\r\n        return () => {\r\n            window.removeEventListener('scroll', handleScroll)\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    return {\r\n        offset,\r\n        isScroll\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}